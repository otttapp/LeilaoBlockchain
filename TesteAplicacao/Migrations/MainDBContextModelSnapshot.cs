// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAplicacao.Infraestructure.Context;

#nullable disable

namespace TesteAplicacao.Migrations
{
    [DbContext(typeof(MainDBContext))]
    partial class MainDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteAplicacao.Entities.Produto", b =>
                {
                    b.Property<long>("produto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("produto_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("produto_id"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("data_compra")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_compra");

                    b.Property<DateTime?>("datahora_insercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("datahora_insercao");

                    b.Property<string>("descricao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome");

                    b.Property<long>("raridade")
                        .HasColumnType("bigint")
                        .HasColumnName("raridade");

                    b.Property<long>("usuario_id")
                        .HasColumnType("bigint")
                        .HasColumnName("usuario_id");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("produto_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("TesteAplicacao.Entities.Usuario", b =>
                {
                    b.Property<long>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("usuario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("usuario_id"));

                    b.Property<bool>("ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("datahora_desativacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("datahora_desativacao");

                    b.Property<DateTime?>("datahora_insercao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datahora_insercao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome");

                    b.Property<byte[]>("senha_hash")
                        .IsRequired()
                        .HasColumnType("varbinary(64)")
                        .HasColumnName("senha_hash");

                    b.Property<byte[]>("senha_salt")
                        .IsRequired()
                        .HasColumnType("varbinary(64)")
                        .HasColumnName("senha_salt");

                    b.Property<string>("telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("usuario_id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("TesteAplicacao.Entities.Produto", b =>
                {
                    b.HasOne("TesteAplicacao.Entities.Usuario", "usuario")
                        .WithMany("produtos")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("TesteAplicacao.Entities.Usuario", b =>
                {
                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
